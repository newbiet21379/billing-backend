# Prometheus Alert Rules for Billing Backend Service

groups:
  # Service Health and Availability Alerts
  - name: billing-backend-health
    rules:
      - alert: BillingBackendDown
        expr: up{job="billing-backend"} == 0
        for: 1m
        labels:
          severity: critical
          service: billing-backend
          component: application
        annotations:
          summary: "Billing backend service is down"
          description: "Billing backend has been down for more than 1 minute"
          runbook_url: "https://docs.billing.com/runbooks/service-down"

      - alert: DatabaseDown
        expr: health_status{application="billing-backend", component="db"} != 1
        for: 30s
        labels:
          severity: critical
          service: billing-backend
          component: database
        annotations:
          summary: "Database connectivity lost"
          description: "Billing backend cannot connect to PostgreSQL database"
          runbook_url: "https://docs.billing.com/runbooks/database-down"

      - alert: OCRServiceDown
        expr: health_status{application="billing-backend", component="ocr"} != 1
        for: 1m
        labels:
          severity: warning
          service: billing-backend
          component: ocr-service
        annotations:
          summary: "OCR service unavailable"
          description: "OCR service is not responding to health checks"
          runbook_url: "https://docs.billing.com/runbooks/ocr-down"

      - alert: MinIOStorageDown
        expr: health_status{application="billing-backend", component="minio"} != 1
        for: 30s
        labels:
          severity: critical
          service: billing-backend
          component: storage
        annotations:
          summary: "Object storage unavailable"
          description: "MinIO object storage is not accessible"
          runbook_url: "https://docs.billing.com/runbooks/minio-down"

      - alert: AxonServerDown
        expr: health_status{application="billing-backend", component="axon"} != 1
        for: 1m
        labels:
          severity: critical
          service: billing-backend
          component: event-store
        annotations:
          summary: "Event store unavailable"
          description: "Axon Server is not responding to health checks"
          runbook_url: "https://docs.billing.com/runbooks/axon-down"

  # Performance and Response Time Alerts
  - name: billing-backend-performance
    rules:
      - alert: HighErrorRate
        expr: rate(http_server_requests_total{application="billing-backend", status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
          service: billing-backend
          component: api
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} over the last 5 minutes"
          runbook_url: "https://docs.billing.com/runbooks/high-error-rate"

      - alert: CriticalErrorRate
        expr: rate(http_server_requests_total{application="billing-backend", status=~"5.."}[5m]) > 0.5
        for: 30s
        labels:
          severity: critical
          service: billing-backend
          component: api
        annotations:
          summary: "Critical error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} over the last 5 minutes"
          runbook_url: "https://docs.billing.com/runbooks/critical-error-rate"

      - alert: SlowResponseTime
        expr: histogram_quantile(0.95, rate(http_server_requests_seconds_bucket{application="billing-backend"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: billing-backend
          component: api
        annotations:
          summary: "95th percentile response time too high"
          description: "95th percentile response time is {{ $value }}s"
          runbook_url: "https://docs.billing.com/runbooks/slow-response"

      - alert: VerySlowResponseTime
        expr: histogram_quantile(0.95, rate(http_server_requests_seconds_bucket{application="billing-backend"}[5m])) > 5
        for: 2m
        labels:
          severity: critical
          service: billing-backend
          component: api
        annotations:
          summary: "Very slow response times"
          description: "95th percentile response time is {{ $value }}s"
          runbook_url: "https://docs.billing.com/runbooks/very-slow-response"

      - alert: SlowDatabaseQueries
        expr: database_query_duration_seconds_max{application="billing-backend"} > 1
        for: 3m
        labels:
          severity: warning
          service: billing-backend
          component: database
        annotations:
          summary: "Slow database queries detected"
          description: "Maximum query time is {{ $value }}s"
          runbook_url: "https://docs.billing.com/runbooks/slow-queries"

  # Business Process Alerts
  - name: billing-backend-business
    rules:
      - alert: OCRFailureRate
        expr: rate(ocr_processing_failure_total{application="billing-backend"}[5m]) / rate(ocr_processing_total{application="billing-backend"}[5m]) > 0.3
        for: 5m
        labels:
          severity: warning
          service: billing-backend
          component: ocr-processing
        annotations:
          summary: "High OCR processing failure rate"
          description: "OCR failure rate is {{ $value | humanizePercentage }}"
          runbook_url: "https://docs.billing.com/runbooks/ocr-failures"

      - alert: CriticalOCRFailureRate
        expr: rate(ocr_processing_failure_total{application="billing-backend"}[5m]) / rate(ocr_processing_total{application="billing-backend"}[5m]) > 0.5
        for: 2m
        labels:
          severity: critical
          service: billing-backend
          component: ocr-processing
        annotations:
          summary: "Critical OCR processing failure rate"
          description: "OCR failure rate is {{ $value | humanizePercentage }}"
          runbook_url: "https://docs.billing.com/runbooks/critical-ocr-failures"

      - alert: FileUploadFailures
        expr: rate(files_attached_total{application="billing-backend", status="failed"}[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
          service: billing-backend
          component: file-storage
        annotations:
          summary: "File upload failures increasing"
          description: "File upload failure rate is {{ $value | humanizePercentage }}"
          runbook_url: "https://docs.billing.com/runbooks/file-upload-failures"

      - alert: NoBillsProcessed
        expr: increase(bills_created_total{application="billing-backend"}[15m]) == 0
        for: 15m
        labels:
          severity: warning
          service: billing-backend
          component: business-process
        annotations:
          summary: "No bills processed in the last 15 minutes"
          description: "Business activity seems unusually low"
          runbook_url: "https://docs.billing.com/runbooks/no-activity"

      - alert: HighPendingApprovals
        expr: bills_pending_approval_count{application="billing-backend"} > 1000
        for: 10m
        labels:
          severity: warning
          service: billing-backend
          component: business-process
        annotations:
          summary: "High number of pending bill approvals"
          description: "{{ $value }} bills are pending approval"
          runbook_url: "https://docs.billing.com/runbooks/pending-approvals"

  # Resource Usage Alerts
  - name: billing-backend-resources
    rules:
      - alert: HighMemoryUsage
        expr: (jvm_memory_used_bytes{application="billing-backend", area="heap"} / jvm_memory_max_bytes{application="billing-backend", area="heap"}) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: billing-backend
          component: jvm
        annotations:
          summary: "High JVM heap memory usage"
          description: "Heap memory usage is {{ $value }}%"
          runbook_url: "https://docs.billing.com/runbooks/high-memory"

      - alert: CriticalMemoryUsage
        expr: (jvm_memory_used_bytes{application="billing-backend", area="heap"} / jvm_memory_max_bytes{application="billing-backend", area="heap"}) * 100 > 95
        for: 2m
        labels:
          severity: critical
          service: billing-backend
          component: jvm
        annotations:
          summary: "Critical JVM heap memory usage"
          description: "Heap memory usage is {{ $value }}%"
          runbook_url: "https://docs.billing.com/runbooks/critical-memory"

      - alert: HighCPUUsage
        expr: process_cpu_usage{application="billing-backend"} * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: billing-backend
          component: system
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}%"
          runbook_url: "https://docs.billing.com/runbooks/high-cpu"

      - alert: CriticalCPUUsage
        expr: process_cpu_usage{application="billing-backend"} * 100 > 90
        for: 2m
        labels:
          severity: critical
          service: billing-backend
          component: system
        annotations:
          summary: "Critical CPU usage"
          description: "CPU usage is {{ $value }}%"
          runbook_url: "https://docs.billing.com/runbooks/critical-cpu"

      - alert: HighStorageUsage
        expr: storage_usage_bytes{application="billing-backend"} / (5 * 1024 * 1024 * 1024) * 100 > 80  # Assuming 5GB limit
        for: 10m
        labels:
          severity: warning
          service: billing-backend
          component: storage
        annotations:
          summary: "High storage usage"
          description: "Storage usage is {{ $value }}%"
          runbook_url: "https://docs.billing.com/runbooks/high-storage"

  # Axon Framework Specific Alerts
  - name: billing-backend-axon
    rules:
      - alert: AxonCommandFailures
        expr: rate(axon_commands_processed_total{application="billing-backend", status="failure"}[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
          service: billing-backend
          component: axon-commands
        annotations:
          summary: "High Axon command failure rate"
          description: "Command failure rate is {{ $value | humanizePercentage }}"
          runbook_url: "https://docs.billing.com/runbooks/command-failures"

      - alert: AxonEventProcessingBacklog
        expr: axon_event_processor_queue_size{application="billing-backend"} > 1000
        for: 5m
        labels:
          severity: warning
          service: billing-backend
          component: axon-events
        annotations:
          summary: "Event processing backlog growing"
          description: "Event processor queue size is {{ $value }}"
          runbook_url: "https://docs.billing.com/runbooks/event-backlog"